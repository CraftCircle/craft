# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  """Email of the user"""
  email: String!

  """Name of the user"""
  name: String!

  """Password of the user"""
  password: String

  """Authentication provider (e.g., google)"""
  provider: String

  """ID from the authentication provider"""
  providerId: String

  """Role of the user"""
  role: Role! = USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginRequestDTO {
  email: String!
  password: String!
}

type LoginResponseDTO {
  access_token: String!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): UserEntity!
  login(loginInput: LoginRequestDTO!): LoginResponseDTO!
  register(registerInput: RegisterRequestDTO!): RegisterResponseDTO!
  removeUser(email: String!): UserEntity!
  updateUser(email: String!, updateUserInput: UpdateUserDto!): UserEntity!
}

type Query {
  findAll: [UserEntity!]!
  findOne(email: String!): UserEntity!
  whoAmI: UserEntity!
}

input RegisterRequestDTO {
  email: String!
  name: String!
  password: String!
  provider: String
  providerId: String
  role: Role
}

type RegisterResponseDTO {
  access_token: String!
}

"""The roles a user can have"""
enum Role {
  ADMIN
  USER
}

input UpdateUserDto {
  email: String
  id: String!

  """Name of the user"""
  name: String
  password: String

  """Authentication provider (e.g., google)"""
  provider: String

  """ID from the authentication provider"""
  providerId: String
  role: Role
}

type UserEntity {
  createdAt: DateTime!
  email: String!
  id: String!
  name: String!
  password: String!
  provider: String!
  providerId: String!
  role: Role!
  updatedAt: DateTime!
}